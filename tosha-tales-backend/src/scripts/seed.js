import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting database seeding...');

  // Create admin user
  const hashedPassword = await bcrypt.hash('admin123', 10);
  const adminUser = await prisma.user.upsert({
    where: { email: 'admin@toshales.com' },
    update: {},
    create: {
      email: 'admin@toshales.com',
      password: hashedPassword,
      role: 'ADMIN',
    },
  });

  console.log('‚úÖ Admin user created:', adminUser.email);

  // Create categories
  const categories = await Promise.all([
    prisma.category.upsert({
      where: { name: '–î—Ä—É–∂–±–∞' },
      update: {},
      create: {
        name: '–î—Ä—É–∂–±–∞',
        description: '–°–∫–∞–∑–∫–∏ –æ –¥—Ä—É–∂–±–µ –∏ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏',
        color: '#4F46E5',
      },
    }),
    prisma.category.upsert({
      where: { name: '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è' },
      update: {},
      create: {
        name: '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
        description: '–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö',
        color: '#059669',
      },
    }),
    prisma.category.upsert({
      where: { name: '–í–æ–ª—à–µ–±—Å—Ç–≤–æ' },
      update: {},
      create: {
        name: '–í–æ–ª—à–µ–±—Å—Ç–≤–æ',
        description: '–°–∫–∞–∑–∫–∏ —Å –º–∞–≥–∏–µ–π –∏ —á—É–¥–µ—Å–∞–º–∏',
        color: '#DC2626',
      },
    }),
    prisma.category.upsert({
      where: { name: '–ü—Ä–∏–Ω—è—Ç–∏–µ' },
      update: {},
      create: {
        name: '–ü—Ä–∏–Ω—è—Ç–∏–µ',
        description: '–ò—Å—Ç–æ—Ä–∏–∏ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–∞–∑–ª–∏—á–∏–π',
        color: '#7C3AED',
      },
    }),
    prisma.category.upsert({
      where: { name: '–≠–∫–æ–ª–æ–≥–∏—è' },
      update: {},
      create: {
        name: '–≠–∫–æ–ª–æ–≥–∏—è',
        description: '–°–∫–∞–∑–∫–∏ –æ –∑–∞–±–æ—Ç–µ –æ –ø—Ä–∏—Ä–æ–¥–µ',
        color: '#059669',
      },
    }),
    prisma.category.upsert({
      where: { name: '–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤' },
      update: {},
      create: {
        name: '–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤',
        description: '–ò—Å—Ç–æ—Ä–∏–∏ –æ —Å–º–µ–ª–æ—Å—Ç–∏ –∏ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–∏',
        color: '#D97706',
      },
    }),
  ]);

  console.log('‚úÖ Categories created:', categories.length);

  // Create roles
  const roles = await Promise.all([
    prisma.role.upsert({
      where: { name: '–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π' },
      update: {},
      create: {
        name: '–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π',
        description: '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –∏—Å—Ç–æ—Ä–∏–∏',
      },
    }),
    prisma.role.upsert({
      where: { name: '–õ—É—á—à–∏–π –¥—Ä—É–≥' },
      update: {},
      create: {
        name: '–õ—É—á—à–∏–π –¥—Ä—É–≥',
        description: '–í–µ—Ä–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è',
      },
    }),
    prisma.role.upsert({
      where: { name: '–ú—É–¥—Ä—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫' },
      update: {},
      create: {
        name: '–ú—É–¥—Ä—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫',
        description: '–û–ø—ã—Ç–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂, –¥–∞—é—â–∏–π —Å–æ–≤–µ—Ç—ã',
      },
    }),
    prisma.role.upsert({
      where: { name: '–í–µ—Å—ë–ª—ã–π —Å–ø—É—Ç–Ω–∏–∫' },
      update: {},
      create: {
        name: '–í–µ—Å—ë–ª—ã–π —Å–ø—É—Ç–Ω–∏–∫',
        description: '–ó–∞–±–∞–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
      },
    }),
    prisma.role.upsert({
      where: { name: '–ú—É–¥—Ä—ã–π —Å—Ç–∞—Ä–µ—Ü' },
      update: {},
      create: {
        name: '–ú—É–¥—Ä—ã–π —Å—Ç–∞—Ä–µ—Ü',
        description: '–ü–æ–∂–∏–ª–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ —Å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º –æ–ø—ã—Ç–æ–º',
      },
    }),
    prisma.role.upsert({
      where: { name: '–û—Å–æ–±–µ–Ω–Ω—ã–π –¥—Ä—É–≥' },
      update: {},
      create: {
        name: '–û—Å–æ–±–µ–Ω–Ω—ã–π –¥—Ä—É–≥',
        description: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ —Å –æ—Å–æ–±—ã–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏',
      },
    }),
  ]);

  console.log('‚úÖ Roles created:', roles.length);

  // Create characters
  const characters = await Promise.all([
    prisma.character.create({
      data: {
        name: '–ö—Ä–æ–∫–æ–¥–∏–ª –¢–æ—à–∞',
        description: '–î–æ–±—Ä—ã–π –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–π –∫—Ä–æ–∫–æ–¥–∏–ª —Å –±–æ–ª—å—à–∏–º —Å–µ—Ä–¥—Ü–µ–º. –í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –¥—Ä—É–∑—å—è–º –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Å—Ç–∞–≤–∏—Ç –Ω–∏–∫–æ–≥–æ –≤ –±–µ–¥–µ.',
        image: '/lovable-uploads/e273e373-a366-4fd1-a5db-6cbb095c564f.png',
        roleId: roles[0].id, // –ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π
      },
    }),
    prisma.character.create({
      data: {
        name: '–ë–µ–ª–æ—á–∫–∞ –ù–∞—Å—Ç—è',
        description: '–≠–Ω–µ—Ä–≥–∏—á–Ω–∞—è –∏ –≤–µ—Å—ë–ª–∞—è –±–µ–ª–æ—á–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ–±–æ–∂–∞–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –æ—Ä–µ—à–∫–∏ –∏ –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–∑—å—è–º. –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–∞—è –∏ –ª–æ–≤–∫–∞—è.',
        image: '/lovable-uploads/feacc9db-2db0-4c54-b4bf-1d71a13c1b46.png',
        roleId: roles[1].id, // –õ—É—á—à–∏–π –¥—Ä—É–≥
      },
    }),
    prisma.character.create({
      data: {
        name: '–Å–∂–∏–∫ –ö–æ–ª—è',
        description: '–ú—É–¥—Ä—ã–π –∏ —Ä–∞—Å—Å—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —ë–∂–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π –∏ –≤—Å–µ–≥–¥–∞ –¥–∞—ë—Ç —Ö–æ—Ä–æ—à–∏–µ —Å–æ–≤–µ—Ç—ã.',
        image: '/lovable-uploads/e273e373-a366-4fd1-a5db-6cbb095c564f.png',
        roleId: roles[2].id, // –ú—É–¥—Ä—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫
      },
    }),
    prisma.character.create({
      data: {
        name: '–ü–æ–ø—É–≥–∞–π –ö–µ—à–∞',
        description: '–Ø—Ä–∫–∏–π –∏ –≥–æ–≤–æ—Ä–ª–∏–≤—ã–π –ø–æ–ø—É–≥–∞–π, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏ –∏ –ø–µ—Ç—å –ø–µ—Å–Ω–∏. –ò–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç —Ö–∏—Ç—Ä—ã–º, –Ω–æ –≤—Å–µ–≥–¥–∞ –¥–æ–±—Ä—ã–º.',
        image: '/lovable-uploads/feacc9db-2db0-4c54-b4bf-1d71a13c1b46.png',
        roleId: roles[3].id, // –í–µ—Å—ë–ª—ã–π —Å–ø—É—Ç–Ω–∏–∫
      },
    }),
    prisma.character.create({
      data: {
        name: '–î–µ–¥—É—à–∫–∞ –ß–µ—Ä–µ–ø–∞—Ö–∞',
        description: '–°–∞–º—ã–π –º—É–¥—Ä—ã–π –∂–∏—Ç–µ–ª—å –ø—Ä—É–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–≥–∞–µ—Ç –º–æ–ª–æ–¥—ã–º –∂–∏–≤–æ—Ç–Ω—ã–º –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏.',
        image: '/lovable-uploads/e273e373-a366-4fd1-a5db-6cbb095c564f.png',
        roleId: roles[4].id, // –ú—É–¥—Ä—ã–π —Å—Ç–∞—Ä–µ—Ü
      },
    }),
    prisma.character.create({
      data: {
        name: '–†–∞–¥—É–∂–Ω–∞—è —Ä—ã–±–∫–∞ –†–∏–Ω–∞',
        description: '–ù–µ–æ–±—ã—á–Ω–∞—è —Ä—ã–±–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å —Å–≤–æ–∏ —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è. –£—á–∏—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–∑–ª–∏—á–∏—è.',
        image: '/lovable-uploads/feacc9db-2db0-4c54-b4bf-1d71a13c1b46.png',
        roleId: roles[5].id, // –û—Å–æ–±–µ–Ω–Ω—ã–π –¥—Ä—É–≥
      },
    }),
  ]);

  console.log('‚úÖ Characters created:', characters.length);

  // Create sample story
  const story = await prisma.story.create({
    data: {
      title: '–¢–æ—à–∞ –∏ –º–æ—Ä—Å–∫–∞—è –∑–≤–µ–∑–¥–∞',
      description: '–î–æ–±—Ä—ã–π –∫—Ä–æ–∫–æ–¥–∏–ª –¢–æ—à–∞ –Ω–∞—Ö–æ–¥–∏—Ç –Ω–∞ –ø–ª—è–∂–µ –≥—Ä—É—Å—Ç–Ω—É—é –º–æ—Ä—Å–∫—É—é –∑–≤–µ–∑–¥—É –∏ –ø–æ–º–æ–≥–∞–µ—Ç –µ–π –≤–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π –≤ –æ–∫–µ–∞–Ω.',
      content: `
        <p>–í –æ–¥–Ω–æ–º –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–º —É–≥–æ–ª–∫–µ –º–∏—Ä–∞, –≥–¥–µ —Å–æ–ª–Ω—Ü–µ –≤—Å–µ–≥–¥–∞ —Å–≤–µ—Ç–∏—Ç —è—Ä–∫–æ, –∞ –º–æ—Ä–µ –ø–ª–µ—â–µ—Ç—Å—è –ª–∞—Å–∫–æ–≤—ã–º–∏ –≤–æ–ª–Ω–∞–º–∏, –∂–∏–ª –¥–æ–±—Ä—ã–π –∫—Ä–æ–∫–æ–¥–∏–ª –ø–æ –∏–º–µ–Ω–∏ –¢–æ—à–∞. –û–Ω –±—ã–ª –Ω–µ–æ–±—ã—á–Ω—ã–º –∫—Ä–æ–∫–æ–¥–∏–ª–æ–º ‚Äì –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—É–≥–∞—Ç—å –¥—Ä—É–≥–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö, –æ–Ω –ª—é–±–∏–ª –ø–æ–º–æ–≥–∞—Ç—å –∏–º –∏ –∑–∞–≤–æ–¥–∏—Ç—å –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π.</p>
        
        <p>–û–¥–Ω–∞–∂–¥—ã —É—Ç—Ä–æ–º, –∫–æ–≥–¥–∞ —Å–æ–ª–Ω—Ü–µ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–ª–æ –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞–¥ –≥–æ—Ä–∏–∑–æ–Ω—Ç–æ–º, –¢–æ—à–∞ —Ä–µ—à–∏–ª –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è –ø–æ –º–æ—Ä—Å–∫–æ–º—É –±–µ—Ä–µ–≥—É. –û–Ω –ª—é–±–∏–ª —ç—Ç–∏ —É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏, –∫–æ–≥–¥–∞ –ø–µ—Å–æ–∫ –±—ã–ª –µ—â—ë –ø—Ä–æ—Ö–ª–∞–¥–Ω—ã–º, –∞ –≤–æ–∑–¥—É—Ö –Ω–∞–ø–æ–ª–Ω–µ–Ω —Å–≤–µ–∂–µ—Å—Ç—å—é.</p>
        
        <p>–í–¥—Ä—É–≥ –æ–Ω –∑–∞–º–µ—Ç–∏–ª —á—Ç–æ-—Ç–æ –Ω–µ–æ–±—ã—á–Ω–æ–µ –Ω–∞ –ø–µ—Å–∫–µ. –≠—Ç–æ –±—ã–ª–∞ –º–∞–ª–µ–Ω—å–∫–∞—è –º–æ—Ä—Å–∫–∞—è –∑–≤–µ–∑–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≥–ª—è–¥–µ–ª–∞ –æ—á–µ–Ω—å –≥—Ä—É—Å—Ç–Ω–æ–π. –ï—ë –ª—É—á–∏–∫–∏ –±—ã–ª–∏ –æ–ø—É—â–µ–Ω—ã, –∞ –æ–±—ã—á–Ω–æ —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞ –ø–æ—Ç—É—Å–∫–Ω–µ–ª–∏.</p>
        
        <p>‚Äî –ü—Ä–∏–≤–µ—Ç! ‚Äî –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ –ø–æ–∑–≤–∞–ª –¢–æ—à–∞. ‚Äî –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å? –ü–æ—á–µ–º—É —Ç—ã —Ç–∞–∫–∞—è –≥—Ä—É—Å—Ç–Ω–∞—è?</p>
        
        <p>–ú–æ—Ä—Å–∫–∞—è –∑–≤–µ–∑–¥–∞ –ø–æ–¥–Ω—è–ª–∞ –æ–¥–∏–Ω –∏–∑ —Å–≤–æ–∏—Ö –ª—É—á–∏–∫–æ–≤ –∏ —Ç–∏—Ö–æ –æ—Ç–≤–µ—Ç–∏–ª–∞:</p>
        
        <p>‚Äî –Ø –∑–∞–±–ª—É–¥–∏–ª–∞—Å—å... –í–æ –≤—Ä–µ–º—è –Ω–æ—á–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞ –º–µ–Ω—è –≤—ã–±—Ä–æ—Å–∏–ª–æ –Ω–∞ –±–µ—Ä–µ–≥, –∞ —Ç–µ–ø–µ—Ä—å —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –¥–æ—Ä–æ–≥—É –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–∫–µ–∞–Ω. –Ø —Ç–∞–∫ —Å–∫—É—á–∞—é –ø–æ —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º –∏ –ø–æ —Å–≤–æ–µ–º—É –¥–æ–º—É —Å—Ä–µ–¥–∏ –∫–æ—Ä–∞–ª–ª–æ–≤—ã—Ö —Ä–∏—Ñ–æ–≤.</p>
        
        <p>–¢–æ—à–∞ —Å—Ä–∞–∑—É –ø–æ–Ω—è–ª, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å. –û–Ω –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø–æ–¥–Ω—è–ª –º–æ—Ä—Å–∫—É—é –∑–≤–µ–∑–¥—É –∏ –ø–æ–Ω—ë—Å –µ—ë –∫ –≤–æ–¥–µ.</p>
        
        <p>‚Äî –ù–µ –≤–æ–ª–Ω—É–π—Å—è, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π! ‚Äî —Å–∫–∞–∑–∞–ª –æ–Ω —É–≤–µ—Ä–µ–Ω–Ω–æ.</p>
        
        <p>–ü–æ –ø—É—Ç–∏ –∫ –æ–∫–µ–∞–Ω—É –æ–Ω–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –∫—Ä–∞–±–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–∂–µ —Ä–µ—à–∏–ª –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—é. –ö—Ä–∞–± –±—ã–ª –æ—á–µ–Ω—å –º—É–¥—Ä—ã–º –∏ –∑–Ω–∞–ª –≤—Å–µ —Ç–∞–π–Ω—ã–µ —Ç—Ä–æ–ø–∏–Ω–∫–∏ –º–æ—Ä—Å–∫–æ–≥–æ –¥–Ω–∞.</p>
        
        <p>–í–º–µ—Å—Ç–µ –æ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –º–æ—Ä—Å–∫–∏–º –≥–ª—É–±–∏–Ω–∞–º. –û–Ω–∏ –ø—Ä–æ–ø–ª—ã–ª–∏ –º–∏–º–æ —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã—Ö –∫–æ—Ä–∞–ª–ª–æ–≤, –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ —Å—Ç–∞—é –≤–µ—Å—ë–ª—ã—Ö —Ä—ã–±–æ–∫ –∏ –¥–∞–∂–µ —É–≤–∏–¥–µ–ª–∏ –æ–≥—Ä–æ–º–Ω–æ–≥–æ, –Ω–æ –æ—á–µ–Ω—å –¥–æ–±—Ä–æ–≥–æ –∫–∏—Ç–∞.</p>
        
        <p>–ù–∞–∫–æ–Ω–µ—Ü –æ–Ω–∏ –¥–æ–±—Ä–∞–ª–∏—Å—å –¥–æ –∫–æ—Ä–∞–ª–ª–æ–≤–æ–≥–æ —Ä–∏—Ñ–∞, –≥–¥–µ –∂–∏–ª–∞ –º–æ—Ä—Å–∫–∞—è –∑–≤–µ–∑–¥–∞. –í—Å–µ –µ—ë –¥—Ä—É–∑—å—è –æ—á–µ–Ω—å –æ–±—Ä–∞–¥–æ–≤–∞–ª–∏—Å—å –µ—ë –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—é!</p>
        
        <p>‚Äî –°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ, –¢–æ—à–∞! ‚Äî —Å–∫–∞–∑–∞–ª–∞ –º–æ—Ä—Å–∫–∞—è –∑–≤–µ–∑–¥–∞, —Å–∏—è—è –æ—Ç —Å—á–∞—Å—Ç—å—è. ‚Äî –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥!</p>
        
        <p>–° —Ç–µ—Ö –ø–æ—Ä –¢–æ—à–∞ —á–∞—Å—Ç–æ –Ω–∞–≤–µ—â–∞–ª —Å–≤–æ–∏—Ö –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π –≤ –æ–∫–µ–∞–Ω–µ, –∞ –º–æ—Ä—Å–∫–∞—è –∑–≤–µ–∑–¥–∞ –≤—Å–µ–≥–¥–∞ —Ä–∞–¥–æ—Å—Ç–Ω–æ –º–∞—Ö–∞–ª–∞ –µ–º—É —Å–≤–æ–∏–º–∏ –ª—É—á–∏–∫–∞–º–∏, –∫–æ–≥–¥–∞ –æ–Ω –ø—Ä–æ–ø–ª—ã–≤–∞–ª –º–∏–º–æ.</p>
        
        <p><strong>–ú–æ—Ä–∞–ª—å —Å–∫–∞–∑–∫–∏:</strong> –î—Ä—É–∂–±–∞ –∏ –ø–æ–º–æ—â—å –¥—Ä—É–≥–∏–º ‚Äì —ç—Ç–æ —Å–∞–º–æ–µ —Ü–µ–Ω–Ω–æ–µ, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å. –î–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–±—Ä—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —á—å—é-—Ç–æ –∂–∏–∑–Ω—å –∫ –ª—É—á—à–µ–º—É.</p>
      `,
      readTime: '5 –º–∏–Ω',
      ageGroup: '4-6 –ª–µ—Ç',
      status: 'PUBLISHED',
      categoryId: categories[0].id, // –î—Ä—É–∂–±–∞
      authorId: adminUser.id,
    },
  });

  console.log('‚úÖ Sample story created:', story.title);

  // Create story-character relationships
  await prisma.storyCharacter.createMany({
    data: [
      {
        storyId: story.id,
        characterId: characters[0].id, // –ö—Ä–æ–∫–æ–¥–∏–ª –¢–æ—à–∞
      },
    ],
    skipDuplicates: true,
  });

  console.log('‚úÖ Story-character relationships created');

  // Create story illustrations
  await prisma.storyIllustration.createMany({
    data: [
      {
        storyId: story.id,
        imageUrl: '/lovable-uploads/feacc9db-2db0-4c54-b4bf-1d71a13c1b46.png',
        position: 'center',
        caption: '–¢–æ—à–∞ –≥—É–ª—è–µ—Ç –ø–æ —É—Ç—Ä–µ–Ω–Ω–µ–º—É –ø–ª—è–∂—É',
        order: 1,
      },
      {
        storyId: story.id,
        imageUrl: '/lovable-uploads/e273e373-a366-4fd1-a5db-6cbb095c564f.png',
        position: 'right',
        caption: '–ú–æ—Ä—Å–∫–∞—è –∑–≤–µ–∑–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–±–ª—É–¥–∏–ª–∞—Å—å',
        order: 2,
      },
      {
        storyId: story.id,
        imageUrl: '/lovable-uploads/feacc9db-2db0-4c54-b4bf-1d71a13c1b46.png',
        position: 'left',
        caption: '–¢–æ—à–∞ –Ω–µ—Å—ë—Ç –º–æ—Ä—Å–∫—É—é –∑–≤–µ–∑–¥—É –∫ –≤–æ–¥–µ',
        order: 3,
      },
    ],
    skipDuplicates: true,
  });

  console.log('‚úÖ Story illustrations created');

  console.log('üéâ Database seeding completed successfully!');
}

main()
  .catch((e) => {
    console.error('‚ùå Error during seeding:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  }); 