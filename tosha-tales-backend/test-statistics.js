import fetch from 'node-fetch';

const BASE_URL = 'http://localhost:3001/api';

// –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
const ADMIN_TOKEN = 'your-admin-token-here';

async function testStatisticsAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...\n');

  const headers = {
    'Authorization': `Bearer ${ADMIN_TOKEN}`,
    'Content-Type': 'application/json'
  };

  try {
    // –¢–µ—Å—Ç 1: –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    const dashboardResponse = await fetch(`${BASE_URL}/admin/statistics`, { headers });
    console.log(`   –°—Ç–∞—Ç—É—Å: ${dashboardResponse.status}`);
    if (dashboardResponse.ok) {
      const data = await dashboardResponse.json();
      console.log('   ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
      console.log('   –î–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
    } else {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    }

    console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫...');

    // –¢–µ—Å—Ç 2: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞–∑–æ–∫
    const storiesResponse = await fetch(`${BASE_URL}/admin/statistics/stories`, { headers });
    console.log(`   –°–∫–∞–∑–∫–∏ - –°—Ç–∞—Ç—É—Å: ${storiesResponse.status}`);
    if (storiesResponse.ok) {
      const data = await storiesResponse.json();
      console.log(`   ‚úÖ –°–∫–∞–∑–æ–∫: ${data.data.count}`);
    }

    // –¢–µ—Å—Ç 3: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    const charactersResponse = await fetch(`${BASE_URL}/admin/statistics/characters`, { headers });
    console.log(`   –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ - –°—Ç–∞—Ç—É—Å: ${charactersResponse.status}`);
    if (charactersResponse.ok) {
      const data = await charactersResponse.json();
      console.log(`   ‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂–µ–π: ${data.data.count}`);
    }

    // –¢–µ—Å—Ç 4: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const categoriesResponse = await fetch(`${BASE_URL}/admin/statistics/categories`, { headers });
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ - –°—Ç–∞—Ç—É—Å: ${categoriesResponse.status}`);
    if (categoriesResponse.ok) {
      const data = await categoriesResponse.json();
      console.log(`   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${data.data.count}`);
    }

    // –¢–µ—Å—Ç 5: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π
    const rolesResponse = await fetch(`${BASE_URL}/admin/statistics/roles`, { headers });
    console.log(`   –†–æ–ª–∏ - –°—Ç–∞—Ç—É—Å: ${rolesResponse.status}`);
    if (rolesResponse.ok) {
      const data = await rolesResponse.json();
      console.log(`   ‚úÖ –†–æ–ª–µ–π: ${data.data.count}`);
    }

    // –¢–µ—Å—Ç 6: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
    const mediaResponse = await fetch(`${BASE_URL}/admin/statistics/media`, { headers });
    console.log(`   –ú–µ–¥–∏–∞ - –°—Ç–∞—Ç—É—Å: ${mediaResponse.status}`);
    if (mediaResponse.ok) {
      const data = await mediaResponse.json();
      console.log(`   ‚úÖ –ú–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: ${data.data.count}`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testStatisticsAPI(); 