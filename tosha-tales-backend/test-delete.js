#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π
 * –ó–∞–ø—É—Å–∫: node test-delete.js
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testDeleteAPI() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π:');
    const illustrations = await prisma.storyIllustration.findMany({
      take: 3,
      select: {
        id: true,
        imageUrl: true,
        position_horizontal: true,
        position_vertical: true,
        storyId: true
      }
    });
    
    if (illustrations.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    console.log('–ù–∞–π–¥–µ–Ω—ã –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏:', illustrations);
    console.log('');

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
    const testIllustration = illustrations[0];
    console.log(`2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ ${testIllustration.id}:`);
    
    try {
      const deleted = await prisma.storyIllustration.delete({
        where: { id: testIllustration.id }
      });
      console.log('‚úÖ –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞:', deleted);
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const restored = await prisma.storyIllustration.create({
        data: {
          imageUrl: testIllustration.imageUrl,
          position_horizontal: testIllustration.position_horizontal,
          position_vertical: testIllustration.position_vertical,
          order: 1,
          storyId: testIllustration.storyId
        }
      });
      console.log('‚úÖ –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:', restored);
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error.message);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testDeleteAPI();
